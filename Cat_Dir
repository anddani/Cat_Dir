#!/bin/bash

USERNAME="-u$(git config user.name)"
GIST_URL="https://api.github.com/gists"
PUBLIC="false"
DESCRIPTION="Uploaded using Cat_Dir"
HEADERS="'Content-Type: application/json'"

timestamp() {
    date +"%Y-%m-%d_%H-%M-%S"
}

function substitute_newline() {
    sed -e 's/$/\\n/g' \
        -e 's/"/\\"/g' \
        | tr -d "\n"
}

if [[ $# -eq 0 ]] ; then
    echo "usage: Cat_Dir [-d directory] [-o output-filename]"
    echo "Directory is mandatory. If filename is omitted, the current time will be used as the filename."
    exit 0
fi

# Extract parameters
while getopts "o:d:" opt ; do
    case $opt in
        d) DIRECTORY="$OPTARG"
        ;;
        o) OUTPUT="$OPTARG"
        ;;
        \?) echo "Invalid option -$OPTARG" ; exit 0
        ;;
    esac
done

# If directory option is omitted, exit program
if [[ -z $DIRECTORY ]] ; then
    echo "You must provide [-d directory]"
    exit 0
fi

# If output option is omitted, set output filename
# to current time
if [[ -z $OUTPUT ]] ; then
    OUTPUT="Cat_Dir_$(timestamp)"
fi

# Empty out output file and insert directory
echo "***************** Dir: $DIRECTORY *****************" > $OUTPUT

# For each file in directory
# Append an empty line
# Append the filename
# Append the contents of the file
for entry in $DIRECTORY/*
do
    echo "" >> $OUTPUT
    echo "${entry##*/}" >> $OUTPUT
    cat "$entry" >> $OUTPUT
done

# Extract the content of the file and substitute
# all newlines with '\n' character to follow
# JSON standard
CONTENT=$(substitute_newline < "${OUTPUT}")

echo $CONTENT
echo $USERNAME
echo $HEADERS
REQUEST_BODY="{\"description\": \"${DESCRIPTION}\", \"public\": ${PUBLIC}, \"files\": {\"${OUTPUT}\": {\"content\": \"${CONTENT}\"}}}"
echo $REQUEST_BODY

echo $(curl --silent "${USERNAME}" -X POST -H "${HEADERS}" -d "${REQUEST_BODY}" "${GIST_URL}") \
     | grep "html_url" \
     | grep -Eo '".*?"' \
     | sed -n 2p \
     | tr -d '\"'
